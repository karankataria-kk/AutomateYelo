<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="62242" started-at="2020-11-19T01:52:15 IST" finished-at="2020-11-19T01:53:17 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="62242" started-at="2020-11-19T01:52:15 IST" finished-at="2020-11-19T01:53:17 IST">
      <class name="UseCases.TestSuite1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:UseCases.TestSuite1@51cdd8a]" name="beforeSuite" is-config="true" duration-ms="15121" started-at="2020-11-19T01:52:00 IST" finished-at="2020-11-19T01:52:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:UseCases.TestSuite1@51cdd8a]" name="beforeTest" is-config="true" duration-ms="7818" started-at="2020-11-19T01:52:15 IST" finished-at="2020-11-19T01:52:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="SignUp()[pri:1, instance:UseCases.TestSuite1@51cdd8a]" name="SignUp" duration-ms="11455" started-at="2020-11-19T01:52:23 IST" finished-at="2020-11-19T01:52:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUp -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:UseCases.TestSuite1@51cdd8a]" name="beforeTest" is-config="true" duration-ms="6868" started-at="2020-11-19T01:52:34 IST" finished-at="2020-11-19T01:52:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="LogIn()[pri:2, instance:UseCases.TestSuite1@51cdd8a]" name="LogIn" duration-ms="5939" started-at="2020-11-19T01:52:41 IST" finished-at="2020-11-19T01:52:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogIn -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:UseCases.TestSuite1@51cdd8a]" name="beforeTest" is-config="true" duration-ms="5716" started-at="2020-11-19T01:52:47 IST" finished-at="2020-11-19T01:52:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="CreateOrder()[pri:3, instance:UseCases.TestSuite1@51cdd8a]" name="CreateOrder" duration-ms="18460" started-at="2020-11-19T01:52:53 IST" finished-at="2020-11-19T01:53:11 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at UseCases.TestSuite1.CreateOrder(TestSuite1.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateOrder -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:UseCases.TestSuite1@51cdd8a]" name="beforeTest" is-config="true" duration-ms="5841" started-at="2020-11-19T01:53:11 IST" finished-at="2020-11-19T01:53:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="acceptOrder()[pri:4, instance:UseCases.TestSuite1@51cdd8a]" name="acceptOrder" duration-ms="2" started-at="2020-11-19T01:53:17 IST" finished-at="2020-11-19T01:53:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- acceptOrder -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:UseCases.TestSuite1@51cdd8a]" name="afterSuite" is-config="true" duration-ms="1" started-at="2020-11-19T01:53:18 IST" finished-at="2020-11-19T01:53:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- UseCases.TestSuite1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
